/*
 * Copyright (C) 2021 Open Source Robotics Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

vertex_program selection_buffer_vs glsl
{
  // reuse depth camera vertex shader
  source depth_camera_vs.glsl
  default_params
  {
    param_named_auto worldViewProj worldviewproj_matrix
  }
}

fragment_program selection_buffer_fs glsl
{
  source selection_buffer_fs.glsl
  default_params
  {
    param_named colorTexture int 0
    param_named depthTexture int 1
  }
}

material SelectionBuffer
{
  // Material has one technique
  technique
  {
    // This technique has one pass
    pass
    {
      // Make this pass use the vertex shader defined above
      vertex_program_ref selection_buffer_vs { }

      // Make this pass use the pixel shader defined above
      fragment_program_ref selection_buffer_fs { }
      texture_unit colorTexture
      {
        filtering none
        tex_address_mode clamp
      }
      texture_unit depthTexture
      {
        filtering none
        tex_address_mode clamp
      }
    }
  }
}
