/*
 * Copyright (C) 2021 Open Source Robotics Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// GLSL shaders
vertex_program PointCloudVS_GLSL glsl
{
  source point_vs.glsl
}

fragment_program PointCloudFS_GLSL glsl
{
  source point_fs.glsl
}

// Vulkan shaders
vertex_program PointCloudVS_VK glslvk
{
  source point_vs.glsl
}

fragment_program PointCloudFS_VK glslvk
{
  source point_fs.glsl
}

// Metal shaders
vertex_program PointCloudVS_Metal metal
{
  source point_vs.metal
}

fragment_program PointCloudFS_Metal metal
{
  source point_fs.metal
  shader_reflection_pair_hint PointCloudVS_Metal
}

// Unified shaders
vertex_program PointCloudVS unified
{
  delegate PointCloudVS_GLSL
  delegate PointCloudVS_Metal
  delegate PointCloudVS_VK

  default_params
  {
    param_named_auto worldViewProj worldviewproj_matrix
    param_named size float 1.0
  }
}

fragment_program PointCloudFS unified
{
  delegate PointCloudFS_GLSL
  delegate PointCloudFS_Metal
  delegate PointCloudFS_VK

  default_params
  {
    param_named color float4 1.0 1.0 1.0 1.0
  }
}

material PointCloudPoint
{
  technique
  {
    pass
    {
      point_size_attenuation on
      point_sprites on
      vertex_program_ref   PointCloudVS {}
      fragment_program_ref PointCloudFS {}
    }
  }
}

// For sensors
material PointCloudPoint_solid
{
  technique
  {
    pass
    {
      point_size_attenuation on
      point_sprites on
      vertex_program_ref   PointCloudVS {}
      fragment_program_ref plaincolor_fs
      {
        param_named_auto inColor custom 1
      }
    }
  }
}
