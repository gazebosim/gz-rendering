load(
    "//ign_bazel:ign_export_header.bzl",
    "ign_export_header",
)

ign_export_header(
    name = "include/ignition/rendering/ogre2/Export.hh",
    lib_name = "ignition-rendering",
    export_base = "IGNITION_RENDERING_OGRE2",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = [
    "include/ignition/rendering/ogre2/Ogre2ArrowVisual.hh",
    "include/ignition/rendering/ogre2/Ogre2AxisVisual.hh",
    "include/ignition/rendering/ogre2/Ogre2Camera.hh",
    "include/ignition/rendering/ogre2/Ogre2Conversions.hh",
    "include/ignition/rendering/ogre2/Ogre2DepthCamera.hh",
    "include/ignition/rendering/ogre2/Ogre2DynamicRenderable.hh",
    "include/ignition/rendering/ogre2/Ogre2GaussianNoisePass.hh",
    "include/ignition/rendering/ogre2/Ogre2Geometry.hh",
    "include/ignition/rendering/ogre2/Ogre2GizmoVisual.hh",
    "include/ignition/rendering/ogre2/Ogre2GpuRays.hh",
    "include/ignition/rendering/ogre2/Ogre2Grid.hh",
    "include/ignition/rendering/ogre2/Ogre2Includes.hh",
    "include/ignition/rendering/ogre2/Ogre2Light.hh",
    "include/ignition/rendering/ogre2/Ogre2Marker.hh",
    "include/ignition/rendering/ogre2/Ogre2Material.hh",
    "include/ignition/rendering/ogre2/Ogre2MaterialSwitcher.hh",
    "include/ignition/rendering/ogre2/Ogre2MeshFactory.hh",
    "include/ignition/rendering/ogre2/Ogre2Mesh.hh",
    "include/ignition/rendering/ogre2/Ogre2Node.hh",
    "include/ignition/rendering/ogre2/Ogre2Object.hh",
    "include/ignition/rendering/ogre2/Ogre2RayQuery.hh",
    "include/ignition/rendering/ogre2/Ogre2RenderEngine.hh",
    "include/ignition/rendering/ogre2/Ogre2RenderPass.hh",
    "include/ignition/rendering/ogre2/Ogre2RenderTarget.hh",
    "include/ignition/rendering/ogre2/Ogre2RenderTargetMaterial.hh",
    "include/ignition/rendering/ogre2/Ogre2RenderTypes.hh",
    "include/ignition/rendering/ogre2/Ogre2Scene.hh",
    "include/ignition/rendering/ogre2/Ogre2SelectionBuffer.hh",
    "include/ignition/rendering/ogre2/Ogre2Sensor.hh",
    "include/ignition/rendering/ogre2/Ogre2Storage.hh",
    "include/ignition/rendering/ogre2/Ogre2ThermalCamera.hh",
    "include/ignition/rendering/ogre2/Ogre2Visual.hh",
    "include/ignition/rendering/ogre2/Ogre2WireBox.hh",
]

sources = [
    "src/Ogre2ArrowVisual.cc",
    "src/Ogre2AxisVisual.cc",
    "src/Ogre2Camera.cc",
    "src/Ogre2Conversions.cc",
    "src/Ogre2DepthCamera.cc",
    "src/Ogre2DynamicRenderable.cc",
    "src/Ogre2GaussianNoisePass.cc",
    "src/Ogre2Geometry.cc",
    "src/Ogre2GizmoVisual.cc",
    "src/Ogre2GpuRays.cc",
    "src/Ogre2Grid.cc",
    "src/Ogre2Light.cc",
    "src/Ogre2Marker.cc",
    "src/Ogre2Material.cc",
    "src/Ogre2MaterialSwitcher.cc",
    "src/Ogre2MeshFactory.cc",
    "src/Ogre2Mesh.cc",
    "src/Ogre2Node.cc",
    "src/Ogre2Object.cc",
    "src/Ogre2RayQuery.cc",
    "src/Ogre2RenderEngine.cc",
    "src/Ogre2RenderPass.cc",
    "src/Ogre2RenderTarget.cc",
    "src/Ogre2RenderTargetMaterial.cc",
    "src/Ogre2Scene.cc",
    "src/Ogre2SelectionBuffer.cc",
    "src/Ogre2Sensor.cc",
    "src/Ogre2ThermalCamera.cc",
    "src/Ogre2Visual.cc",
    "src/Ogre2WireBox.cc",
]

public_headers = public_headers_no_gen + [
    "include/ignition/rendering/ogre2/Export.hh",
]

cc_binary(
    name = "libignition-rendering4-ogre2.so",
    srcs = sources + public_headers,
    includes = ["include"],
    linkopts = ["-Wl,-soname,libignition-rendering4-ogre2.so"],
    linkshared =  True,
    visibility = [],
    deps = [
        "//ign_math",
        "//ign_common",
        "//ign_bazel:utilities",
        "//ign_plugin/core:ign_plugin",
        "//ign_plugin/register:register",
        "//ign_common/graphics:graphics",
        "//ign_common/events:events",
        "//ign_rendering",
        "//ogre2/Components:hlms_pbs",
        "//ogre2/Components:hlms_unlit",
        "//ogre2/Components:overlay",
        "//ogre2:RenderSystem_GL3Plus.so",
    ],
    data = ["src/media"],
    local_defines = [
        "OGRE2_RESOURCE_PATH='\"./ogre2\"'",
        "OGRE2_VERSION='\"TODO: replace with correct string\"'",
    ],
)

cc_library(
    name = "ogre2",
    srcs = ["libignition-rendering4-ogre2.so"],
    hdrs = public_headers,
    includes = ["include"],
    visibility = ["//visibility:public"],
    deps = [
        "//ogre2:libOgreMain.so",
        "//ogre2/Components:hlms_pbs",
        "//ogre2/Components:hlms_unlit",
        "//ogre2/Components:overlay",
        "//ogre2:RenderSystem_GL3Plus.so",
    ]
)
