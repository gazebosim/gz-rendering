
load(
    "//ign_bazel:cmake_configure_file.bzl",
    "cmake_configure_file",
)
load(
    "//ign_bazel:generate_include_header.bzl",
    "generate_include_header",
)
load(
    "//ign_bazel:ign_export_header.bzl",
    "ign_export_header",
)

package(default_visibility = ["//visibility:public"])

RESOURCE_PATH = "ign_rendering"
PROJECT_NAME = "ignition-rendering"
PROJECT_MAJOR = 4
PROJECT_MINOR = 0
PROJECT_PATCH = 0

# Generates config.hh based on the version numbers in CMake code.
cmake_configure_file(
    name = "config",
    src = "include/ignition/rendering/config.hh.in",
    out = "include/ignition/rendering/config.hh",
    cmakelists = ["CMakeLists.txt"],
    defines = [
        "PROJECT_VERSION_MAJOR=%d" % (PROJECT_MAJOR),
        "PROJECT_VERSION_MINOR=%d" % (PROJECT_MINOR),
        "PROJECT_VERSION_PATCH=%d" % (PROJECT_PATCH),
        "PROJECT_MAJOR_VERSION=%d" % (PROJECT_MAJOR),
        "PROJECT_MINOR_VERSION=%d" % (PROJECT_MINOR),
        "PROJECT_PATCH_VERSION=%d" % (PROJECT_PATCH),
        "PROJECT_VERSION=%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR),
        "PROJECT_VERSION_FULL=%d.%d.%d" % (PROJECT_MAJOR, PROJECT_MINOR, PROJECT_PATCH),  # noqa
        "PROJECT_NAME_NO_VERSION=%s" % (PROJECT_NAME),
        "PROJECT_NAME=%s" % (PROJECT_NAME),
        "IGN_PROJECT_NAME=%s" % (PROJECT_NAME),
        "IGN_RENDERING_RESOURCE_PATH=%s" % (RESOURCE_PATH),
    ],
    visibility = ["//visibility:private"],
)

ign_export_header(
    name = "include/ignition/rendering/Export.hh",
    lib_name = "ignition-rendering",
    export_base = "IGNITION_RENDERING",
    visibility = ["//visibility:private"],
)

public_headers_no_gen = [
    "include/ignition/rendering/ArrowVisual.hh",
    "include/ignition/rendering/AxisVisual.hh",
    "include/ignition/rendering/Camera.hh",
    "include/ignition/rendering/CompositeVisual.hh",
    "include/ignition/rendering/DepthCamera.hh",
    "include/ignition/rendering/GaussianNoisePass.hh",
    "include/ignition/rendering/Geometry.hh",
    "include/ignition/rendering/GizmoVisual.hh",
    "include/ignition/rendering/GpuRays.hh",
    "include/ignition/rendering/Grid.hh",
    "include/ignition/rendering/Image.hh",
    "include/ignition/rendering/Light.hh",
    "include/ignition/rendering/Marker.hh",
    "include/ignition/rendering/Material.hh",
    "include/ignition/rendering/MeshDescriptor.hh",
    "include/ignition/rendering/Mesh.hh",
    "include/ignition/rendering/Node.hh",
    "include/ignition/rendering/Object.hh",
    "include/ignition/rendering/OrbitViewController.hh",
    "include/ignition/rendering/PixelFormat.hh",
    "include/ignition/rendering/RayQuery.hh",
    "include/ignition/rendering/RenderEngine.hh",
    "include/ignition/rendering/RenderEngineManager.hh",
    "include/ignition/rendering/RenderEnginePlugin.hh",
    "include/ignition/rendering/RenderingIface.hh",
    "include/ignition/rendering/RenderPass.hh",
    "include/ignition/rendering/RenderPassSystem.hh",
    "include/ignition/rendering/RenderTarget.hh",
    "include/ignition/rendering/RenderTypes.hh",
    "include/ignition/rendering/Scene.hh",
    "include/ignition/rendering/Sensor.hh",
    "include/ignition/rendering/ShaderParam.hh",
    "include/ignition/rendering/ShaderParams.hh",
    "include/ignition/rendering/ShaderType.hh",
    "include/ignition/rendering/Storage.hh",
    "include/ignition/rendering/Text.hh",
    "include/ignition/rendering/ThermalCamera.hh",
    "include/ignition/rendering/TransformController.hh",
    "include/ignition/rendering/TransformType.hh",
    "include/ignition/rendering/Utils.hh",
    "include/ignition/rendering/ViewController.hh",
    "include/ignition/rendering/Visual.hh",
    "include/ignition/rendering/WireBox.hh",
    "include/ignition/rendering/base/BaseArrowVisual.hh",
    "include/ignition/rendering/base/BaseAxisVisual.hh",
    "include/ignition/rendering/base/BaseCamera.hh",
    "include/ignition/rendering/base/BaseDepthCamera.hh",
    "include/ignition/rendering/base/BaseGaussianNoisePass.hh",
    "include/ignition/rendering/base/BaseGeometry.hh",
    "include/ignition/rendering/base/BaseGizmoVisual.hh",
    "include/ignition/rendering/base/BaseGpuRays.hh",
    "include/ignition/rendering/base/BaseGrid.hh",
    "include/ignition/rendering/base/BaseLight.hh",
    "include/ignition/rendering/base/BaseMarker.hh",
    "include/ignition/rendering/base/BaseMaterial.hh",
    "include/ignition/rendering/base/BaseMesh.hh",
    "include/ignition/rendering/base/BaseNode.hh",
    "include/ignition/rendering/base/BaseObject.hh",
    "include/ignition/rendering/base/BaseRayQuery.hh",
    "include/ignition/rendering/base/BaseRenderEngine.hh",
    "include/ignition/rendering/base/BaseRenderPass.hh",
    "include/ignition/rendering/base/BaseRenderTarget.hh",
    "include/ignition/rendering/base/BaseRenderTypes.hh",
    "include/ignition/rendering/base/BaseScene.hh",
    "include/ignition/rendering/base/BaseSensor.hh",
    "include/ignition/rendering/base/BaseStorage.hh",
    "include/ignition/rendering/base/BaseText.hh",
    "include/ignition/rendering/base/BaseThermalCamera.hh",
    "include/ignition/rendering/base/BaseVisual.hh",
    "include/ignition/rendering/base/BaseWireBox.hh",
]

test_sources = [
    "src/ArrowVisual_TEST.cc",
    "src/AxisVisual_TEST.cc",
    "src/Camera_TEST.cc",
    "src/GaussianNoisePass_TEST.cc",
    "src/GizmoVisual_TEST.cc",
    "src/Grid_TEST.cc",
    "src/Light_TEST.cc",
    "src/Marker_TEST.cc",
    "src/Material_TEST.cc",
    "src/MeshDescriptor_TEST.cc",
    "src/Mesh_TEST.cc",
    "src/OrbitViewController_TEST.cc",
    "src/PixelFormat_TEST.cc",
    "src/RayQuery_TEST.cc",
    "src/RenderEngine_TEST.cc",
    # "src/RenderingIface_TEST.cc",
    "src/RenderPassSystem_TEST.cc",
    "src/RenderTarget_TEST.cc",
    "src/Scene_TEST.cc",
    "src/ShaderParams_TEST.cc",
    "src/ShaderParam_TEST.cc",
    "src/Text_TEST.cc",
    "src/ThermalCamera_TEST.cc",
    "src/TransformController_TEST.cc",
    "src/Visual_TEST.cc",
    "src/WireBox_TEST.cc",
]

generate_include_header(
    name = "renderinghh_genrule",
    out = "include/ignition/rendering.hh",
    hdrs = public_headers_no_gen + [
        "include/ignition/rendering/config.hh",
        "include/ignition/rendering/Export.hh",
    ],
)

public_headers = public_headers_no_gen + [
    "include/ignition/rendering/config.hh",
    "include/ignition/rendering/Export.hh",
    "include/ignition/rendering.hh",
]

cc_binary(
    name = "libignition-rendering4.so",
    srcs = [
      "src/base/BaseObject.cc",
      "src/base/BaseRenderEngine.cc",
      "src/base/BaseScene.cc",
      "src/GaussianNoisePass.cc",
      "src/Image.cc",
      "src/Marker.cc",
      "src/MeshDescriptor.cc",
      "src/OrbitViewController.cc",
      "src/PixelFormat.cc",
      "src/RenderEngineManager.cc",
      "src/RenderEnginePlugin.cc",
      "src/RenderingIface.cc",
      "src/RenderPassSystem.cc",
      "src/ShaderParam.cc",
      "src/ShaderParams.cc",
      "src/ShaderType.cc",
      "src/TransformController.cc",
      "src/Utils.cc",
      "src/WireBox.cc",
    ] + public_headers,
    includes = ["include"],
    linkopts = ["-Wl,-soname,libignition-rendering4.so", "-lX11"],
    linkshared =  True,
    visibility = [],
    deps = [
        "//ign_common:ign_common",
        "//ign_common/graphics:graphics",
        "//ign_common/events:events",
        "//ign_plugin/loader:loader",
        "//ign_plugin/core:ign_plugin",
        "//ign_math:ign_math",
        "//ign_bazel:utilities",
    ],
    defines = [
        "HAVE_OPTIX=0",
        "HAVE_OGRE=0",
        "HAVE_OGRE2=1",
        "IGN_RENDERING_PLUGIN_PATH='\"ign_rendering/ogre2/\"'"
    ],
)

cc_library(
    name = "ign_rendering",
    srcs = ["libignition-rendering4.so"],
    hdrs = public_headers,
    includes = ["include"],
    visibility = ["//visibility:public"],
    deps = [
        "//ign_common",
        "//ign_common/events",
        "//ign_common/graphics",
        "//ign_math",
        "//ign_plugin/loader",
    ]
)

[cc_test(
    name = src.replace("/", "_").replace(".cc", "").replace("src_", ""),
    srcs = [src],
    deps = [
        ":ign_rendering",
        "//ign_rendering/test:test_utils",
        "@gtest//:gtest",
        "@gtest//:gtest_main",
    ],
    defines = [
        "IGN_RENDERING_TEST_PLUGIN_PATH='\"ign_rendering/ogre2/\"'"
    ],
) for src in test_sources]

cc_binary(
    name = "simple_demo",
    srcs = [
        "examples/simple_demo/GlutWindow.cc",
        "examples/simple_demo/GlutWindow.hh",
        "examples/simple_demo/Main.cc",
    ],
    deps = [
        ":ign_rendering",
        "//ign_rendering/ogre2:libignition-rendering4-ogre2.so"
    ],
    linkopts = ["-lGL", "-lGLU", "-lglut"],
)

cc_binary(
    name = "ogre2_demo",
    srcs = [
        "examples/ogre2_demo/GlutWindow.cc",
        "examples/ogre2_demo/GlutWindow.hh",
        "examples/ogre2_demo/Main.cc",
    ],
    deps = [
        ":ign_rendering",
        "//ign_rendering/ogre2:libignition-rendering4-ogre2.so"
    ],
    data = ["examples/ogre2_demo/media"],
    linkopts = ["-lGL", "-lGLU", "-lglut"],
)

